#lang sicp

(define (timed-prime-test-2 n)
  (newline)
  (display n)
  (start-prime-test-2 n (runtime)))

(define (start-prime-test-2 n start-time)
  (if (fast-prime? n 100)
      (report-prime-2 (- (runtime) start-time))))

(define (report-prime-2 elapsed-time)
  (display " *** ")
  (display elapsed-time))

;; (time-test ff-prime? <prime number> 1000 (runtime))
;; log(n) = 10.x
;; *** 10000000019 ;; 4.4099999999998545
;; *** 10000000033 ;; 4.690000000000055
;; *** 10000000061 ;; 4.690000000000055
;; average: 4.596666666666654
;; differ: .483333333333273

;; log(n) = 11.x
;;  *** 100000000003 ;; 4.979999999999791
;;  *** 100000000019 ;; 5.080000000000155
;;  *** 100000000057 ;; 5.179999999999836
;; everage: 5.079999999999927

;; log(n) = 12.x
;;  *** 1000000000039 ;; 5.240000000000009
;;  *** 1000000000061 ;; 5.350000000000136
;;  *** 1000000000063 ;; 5.430000000000064
;; average: 5.34000000000007
;; differ: .2600000000001428

;; log(n) = 13.x
;;  *** 10000000000037  ;; 5.5499999999999545
;;  *** 10000000000051  ;; 5.679999999999836
;;  *** 10000000000099  ;; 5.680000000000064
;; average: 5.636666666666618
;; differ: .29666666666654784

;; log(n) = 14.x
;;  *** 100000000000031 ;; 6.279999999999973
;;  *** 100000000000067 ;; 6.080000000000155
;;  *** 100000000000097 ;; 6.099999999999909
;; average: 6.153333333333346
;; differ: .5166666666667279

;; 페르마 테스트가 logn 함수를 갖고 있따면 모든 차이 값은 같아야 하지만 차이가 조금씩 차이가 난다.
;; 그렇다 해서 10배씩 늘어나지도 않았다. 그리고 차이도 숫자가 늘어난다고 해서 같이 늘어나는게 아니고 불규칙적이다. 이런 점들을 볼 때 상수 형태로 늘어나나 다른 환경요인들에 의해 불규칙한 차이가 생기는 것을 보인다.
